# docker-compose.yml
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: sporty_postgres
    environment:
      POSTGRES_DB: sporty
      POSTGRES_USER: sporty_user
      POSTGRES_PASSWORD: sporty_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sporty_user -d sporty"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build: .
    container_name: sporty_backend
    environment:
      # Database Configuration
      USE_DATABASE: "true"
      DATABASE_URL: "postgresql://sporty_user:sporty_password@postgres:5432/sporty"
      
      # AI Provider Configuration
      AI_PROVIDER: "${AI_PROVIDER:-openai}"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      OPENAI_MODEL: "${OPENAI_MODEL:-gpt-3.5-turbo}"
      
      # Ollama Configuration (if using Ollama)
      OLLAMA_BASE_URL: "${OLLAMA_BASE_URL:-http://ollama:11434}"
      OLLAMA_MODEL: "${OLLAMA_MODEL:-llama2}"
      
      # Strava Configuration
      STRAVA_CLIENT_ID: "${STRAVA_CLIENT_ID}"
      STRAVA_CLIENT_SECRET: "${STRAVA_CLIENT_SECRET}"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Ollama (Optional - only if using Ollama AI provider)
  ollama:
    image: ollama/ollama:latest
    container_name: sporty_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    profiles:
      - ollama  # Only start when explicitly requested
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  postgres_data:
  ollama_data:
